{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "CloudWatch and AutoScaling monitor ELB/Instances - HealthyCount.",

  "Parameters" : {
    "aInstanceType" : {
        "Type"                          : "String",
        "Default"                       : "m3.medium",
        "AllowedValues"                 : ["t2.micro", "m3.medium", "m3.large", "m3.xlarge"],
        "Description"                   : "Instance size."
    },
    "bUserAMI" : {
        "Type"                          : "AWS::EC2::Image::Id",
        "Default"                       : "ami-8e682ce6",
        "Description"                   : "Your instance image."
    },
    "cUserKeys" : {
        "Type"                          : "AWS::EC2::KeyPair::KeyName",
        "Description"                   : "Your instance key pair name."
    },
    "dSecurityGroup" : {
        "Type"                          : "AWS::EC2::SecurityGroup::Id",
        "Description"                   : "Instance security group."
    },
    "eELBName" : {
        "Type"                          : "String",
        "Default"                       : "myELB",
        "AllowedPattern"                : "[-a-zA-Z]*",
        "Description"                   : "Enter the name of your Load Balancer."
    },
    "fAvailZones" : {
        "Type"                          : "List<AWS::EC2::AvailabilityZone::Name>",
        "Description"                   : "Enter the availability-zones for your private subnets."
    },
    "gSubnets" : {
        "Type"                          : "List<AWS::EC2::Subnet::Id>",
        "Description"                   : "Subnet Ids for your private subnets. (Note: Must match the availability-zones above.)"
    },
    "hDesiredCapacity" : {
        "Type"                          : "Number",
        "Default"                       : "4",
        "Description"                   : "Number of instances that should be running."
    },
    "iMaxSize" : {
        "Type"                          : "Number",
        "Default"                       : "8",
        "Description"                   : "Maximum size of the autoscale group."
    },
    "jMinSize" : {
        "Type"                          : "Number",
        "Default"                       : "2",
        "Description"                   : "Minimum size of the autoscale group."
    },
    "kScalingAdjUp" : {
        "Type"                          : "Number",
        "Default"                       : "2",
        "Description"                   : "Number of instances by which to scale up."
    },
    "lScalingAdjDn" : {
        "Type"                          : "Number",
        "Default"                       : "-2",
        "Description"                   : "Number of instances by which to scale down."
    },
    "mThresholdLow" : {
        "Type"                          : "Number",
        "Default"                       : "1",
        "Description"                   : "Low threshold for CloudWatch alarm."
    },
    "nThresholdHigh" : {
        "Type"                          : "Number",
        "Default"                       : "2",
        "Description"                   : "High threshold for CloudWatch alarm."
    },
    "oSNSEmail" : {
        "Type"                          : "String",
        "Default"                       : "foo@bar.com",
        "AllowedPattern"                : "[-a-z0-9]*\\@[-a-z0-9]*\\.[a-z]*",
        "Description"                   : "Where should alarms be sent."
    }
  },

  "Resources" : {
    "snsASTopic" : {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "TopicName"                     : { "Fn::Join" : ["-", [ { "Ref" : "AWS::StackName"}, "elb-scaling" ] ] },
        "Subscription"                  : [
          {
          "Endpoint"                    : { "Ref" : "oSNSEmail" },
          "Protocol"                    : "email"
          }
        ]
      }
    },

    "alcServerlaunch" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "ImageId"                       : { "Ref" : "bUserAMI" },
        "KeyName"                       : { "Ref" : "cUserKeys" },
        "InstanceType"                  : { "Ref" : "aInstanceType" },
        "SecurityGroups"                : [ { "Ref" : "dSecurityGroup" } ],
        "AssociatePublicIpAddress"	: "false",
        "UserData" : {
          "Fn::Base64" : {
            "Fn::Join" : [ "",
            [ "#!/bin/bash -ex\n",
              "yum update -y aws-cfn-bootstrap\n",
              "yum update -y\n",
              "# Send a success signal.\n",
              "/opt/aws/bin/cfn-signal -e 0 --stack ", { "Ref": "AWS::StackName" }, " --resource asgServergroup\n" ]
            ]
          }
        }
      }
    },

    "asgServergroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn" : [ "snsASTopic" ],
      "Properties" : {
        "AvailabilityZones"             : { "Ref" : "fAvailZones" },
        "VPCZoneIdentifier"             : { "Ref" : "gSubnets" },
        "Cooldown"                      : "120",
        "DesiredCapacity"               : { "Ref" : "hDesiredCapacity" },
        "MaxSize"                       : { "Ref" : "iMaxSize" },
        "MinSize"                       : { "Ref" : "jMinSize" },
        "HealthCheckType"               : "ELB",
        "HealthCheckGracePeriod"        : "180",
        "LaunchConfigurationName"       : { "Ref" : "alcServerlaunch" },
        "LoadBalancerNames"             : [ { "Ref" : "eELBName" } ],
        "NotificationConfiguration" : {
          "TopicARN"          : { "Ref" : "snsASTopic" },
          "NotificationTypes" : [ 
             "autoscaling:EC2_INSTANCE_LAUNCH",
             "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
             "autoscaling:EC2_INSTANCE_TERMINATE",
             "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
          ] 
        }
      },
      "CreationPolicy" : {
        "ResourceSignal" : {
        "Count"				: { "Ref" : "hDesiredCapacity" },
        "Timeout"			: "PT5M"
        }
      },
      "UpdatePolicy" : {
        "AutoScalingRollingUpdate" : {
          "MinInstancesInService"	: { "Ref" : "jMinSize" }, 
          "MaxBatchSize"		: "2",
          "PauseTime"			: "PT2M",
          "WaitOnResourceSignals"	: "true"
        }
      }
    },

    "aspServerscaleUP" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "DependsOn" : [ "asgServergroup" ],
      "Properties" : {
      "AdjustmentType"                  : "ChangeInCapacity",
      "AutoScalingGroupName"            : { "Ref" : "asgServergroup" },
      "Cooldown"                        : "300",
      "ScalingAdjustment"               : { "Ref" : "kScalingAdjUp" }
      }
    },
    "aspServerscaleDN" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "DependsOn" : [ "asgServergroup" ],
      "Properties" : {
      "AdjustmentType"                  : "ChangeInCapacity",
      "AutoScalingGroupName"            : { "Ref" : "asgServergroup" },
      "ScalingAdjustment"               : { "Ref" : "lScalingAdjDn" }
      }
    },

    "monServeralarmLow" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "DependsOn" : [ "asgServergroup", "aspServerscaleUP" ],
      "Properties" : {
      "MetricName"                      : "HealthyHostCount",
      "Namespace"                       : "AWS/ELB",
      "Statistic"                       : "Maximum",
      "Period"                          : "60",
      "EvaluationPeriods"               : "2",
      "Threshold"                       : { "Ref" : "mThresholdLow" },
      "AlarmActions"                    : [ { "Ref" : "aspServerscaleUP" } ],
      "Dimensions"                      : [ { "Name": "AutoScalingGroupName", "Value": { "Ref": "asgServergroup" } } ],
      "ComparisonOperator"              : "LessThanOrEqualToThreshold"
      }
    },
    "monServeralarmHigh" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "DependsOn" : [ "asgServergroup", "aspServerscaleDN" ],
      "Properties" : {
      "MetricName"                      : "HealthyHostCount",
      "Namespace"                       : "AWS/ELB",
      "Statistic"                       : "Maximum",
      "Period"                          : "60",
      "EvaluationPeriods"               : "2",
      "Threshold"                       : { "Ref" : "nThresholdHigh" },
      "AlarmActions"                    : [ { "Ref" : "aspServerscaleDN" } ],
      "Dimensions"                      : [ { "Name": "AutoScalingGroupName", "Value": { "Ref": "asgServergroup" } } ],
      "ComparisonOperator"              : "GreaterThanOrEqualToThreshold"
      }
    }
  },

  "Outputs" : {
    "asGroupName" : {
      "Description"                     : "Autoscale group name",
      "Value"                           : { "Ref" : "asgServergroup" }
    },
    "snsTopic" : {
      "Description"                     : "SNS Topic ARN",
      "Value"                           : { "Ref" : "snsASTopic" }
    }
  }
}
