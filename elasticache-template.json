{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Creates an ElastiCache cluster in a VPC.",

  "Parameters" : {

    "aCacheNodeType" : {
        "Type"                          : "String",
        "Default"                       : "cache.t1.micro",
        "Description"                   : "The compute and memory capacity of the nodes in the Cache Cluster",
        "AllowedValues"                 : [ "cache.t1.micro", "cache.m1.medium", "cache.m1.large", "cache.m1.xlarge" ],
        "ConstraintDescription"         : "Please select a valid cache node type."
    },
    "bNumberOfCacheNodes" : {
        "Type"                          : "Number",
        "Default"                       : "3",
        "Description"                   : "The number of cache nodes in the cluster.",
        "MinValue"                      : "1",
        "MaxValue"                      : "10",
        "ConstraintDescription"         : "Select between 1 and 10."
    },
    "cCachePort" : {
        "Type"                          : "Number",
        "Default"                       : "11211",
        "Description"                   : "The port the cache nodes will listen on.",
        "MinValue"                      : "1024",
        "MaxValue"                      : "65535",
        "ConstraintDescription"         : "Select between 1024 and 65535."
    },
    "dVPCId" : {
        "Type"                          : "AWS::EC2::VPC::Id",
        "Description"                   : "Your VPC Id."
    },
    "eCacheSubnets" : {
        "Type"                          : "List<AWS::EC2::Subnet::Id>",
        "Description"                   : "Select the Subnets for your cache group."
    },
    "fTestSecurityGroup" : {
        "Type"                          : "AWS::EC2::SecurityGroup::Id",
        "Description"                   : "The security group assigned to the instances permitted to access the cache."
    }
  },

  "Resources" : {

    "elcCacheSubnetGroup" : {
      "Type" : "AWS::ElastiCache::SubnetGroup",
        "Properties" : {
          "Description"                 : "Subnets available for the ElastiCache Cluster",
          "SubnetIds"                   : { "Ref" : "eCacheSubnets" }
        }
    },
    "elcCacheParameters" : {
      "Type" : "AWS::ElastiCache::ParameterGroup",
        "Properties" : {
          "CacheParameterGroupFamily"   : "memcached1.4",
          "Description"                 : "Cache Parameter Group"
        }
    },
    "ec2CacheSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription"            : "Allow access to the cache from the test server",
          "VpcId"                       : { "Ref" : "dVPCId" },
        "Tags": [
          { "Key": "Stack", "Value": { "Ref" : "AWS::StackName" } }
        ],
        "SecurityGroupIngress" : [
          {
          "IpProtocol"                  : "tcp",
          "FromPort"                    : { "Ref" : "cCachePort" },
          "ToPort"                      : { "Ref" : "cCachePort" },
          "SourceSecurityGroupId"       : { "Ref" : "fTestSecurityGroup"}
          }
        ]
      }      
    },  
    "elcCacheCluster" : {
      "Type": "AWS::ElastiCache::CacheCluster",
      "DependsOn" : [ "elcCacheSubnetGroup", "ec2CacheSecurityGroup", "elcCacheParameters" ],
        "Properties": {
          "CacheSubnetGroupName"        : { "Ref" : "elcCacheSubnetGroup" },
          "VpcSecurityGroupIds"         : [ { "Ref" : "ec2CacheSecurityGroup" } ],
          "CacheNodeType"               : { "Ref" : "aCacheNodeType" },
          "CacheParameterGroupName"     : { "Ref" : "elcCacheParameters" },
          "Engine"                      : "memcached",
          "Port"                        : { "Ref" : "cCachePort" },
          "NumCacheNodes"               : { "Ref" : "bNumberOfCacheNodes" }
      }
    }
  },

  "Outputs" : {

    "CacheCluster" : {
      "Description"                     : "DNS endpoint for the Cache Cluster.",
      "Value"                           : { "Fn::Join" : [ ":",
                                            [
                                              { "Fn::GetAtt" : [ "elcCacheCluster", "ConfigurationEndpoint.Address" ] },
                                              { "Fn::GetAtt" : [ "elcCacheCluster", "ConfigurationEndpoint.Port" ] }
                                            ]
                                          ] }
    }
  }
}
